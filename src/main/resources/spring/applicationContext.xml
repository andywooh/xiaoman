<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	 
 	<util:properties id="details" location="classpath:conf/details.properties"></util:properties>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.andywooh"/>
	
	<!-- http://localhost:8080/swagger-ui.html -->
	<context:component-scan base-package="com.andywooh.xiaoman.controller" />   
	<mvc:default-servlet-handler />  
	
	
	<!-- 支持RequestMapping   自动加载了 注解映射器HandlerMapping 和 注解适配器HandlerAdapter配置 等其他组件 -->
	<mvc:annotation-driven/>
	
	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 处理静态资源 -->
	<mvc:default-servlet-handler/>

	<!-- mydatasource -->
	<bean id="mydatasource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="username" value="root"></property>
		<property name="password" value="your_password"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/xiaoman"></property>
	</bean>

	<!-- sqlsessionfactorybean 在Spring中生成一个sqlsessionfactory对象   单例的方式管理SqlSessionFactory-->
	<bean id="sqlsessionfactorybean" class="org.mybatis.spring.SqlSessionFactoryBean">
 		<property name="dataSource" ref="mydatasource"></property>
 		<property name="mapperLocations" value="classpath:com/andywooh/xiaoman/bean/*.xml"></property>
	</bean>
	
	<!-- 使用MapperScannerConfigurer替代 MapperFactoryBean来创建接口的代理对象-->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定MapperDao接口所在包 ，自动创建接口的代理类，并放在Spring容器中。接口的名字和mapper.xml的名字一致，且在同一目录-->
		 <!-- （原始方式是加载mapper.xml文件） -->
		<property name="basePackage" value="com.andywooh.xiaoman.dao"></property>
		
		<!-- 指定带有@MapperMark标记的才当做Mapper处理    -->
		<property name="annotationClass" value="com.andywooh.xiaoman.util.MapperMark"></property>
		
		<!-- sqlSessionfactorybean默认注入了， 即MapperScannerConfigurer有sqlSessionfactorybean，
		使用sqlSessionfactorybean创建接口的代理对象 -->
	</bean>

</beans>